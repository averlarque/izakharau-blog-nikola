<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ilya Zakharau's Blog</title><link>https://izakharau.me/</link><description>Essays about APIs, No-code, and Product Management in Enterprises</description><atom:link href="https://izakharau.me/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2023 &lt;a href="mailto:ilya.zakharau@gmail.com"&gt;Ilya Zakharau&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Wed, 10 May 2023 08:13:14 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Updates on Content Strategy</title><link>https://izakharau.me/posts/updates-on-content-strategy/</link><dc:creator>Ilya Zakharau</dc:creator><description>&lt;div&gt;&lt;p&gt;There are some changes in the content allocation across my Blog and other social media platforms. That will impact what and where you will see.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.linkedin.com/in/ilya-zakharau"&gt;LinkedIn&lt;/a&gt;: no more articles, more short posts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I am no longer publishing any articles directly on Linkedin. There are a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LinkedIn is not promoting its native articles enough. I did some research and compared the metrics - LinkedIn articles are getting less traction than the posts. I am not chasing the big numbers, but it is disappointing when people don't see good materials.&lt;/li&gt;
&lt;li&gt;Native LinkedIn articles are not as good at editing and publishing as other platforms.&lt;/li&gt;
&lt;li&gt;LinkedIn is more about quick "Tik-tok"-like content: short posts and videos, memes, and more generic stuff. It is not a place for longer and more complex articles.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, LinkedIn will stay as my primary social platform. I will move articles to different platforms but continue publishing links and short posts there.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://medium.com/@ilyazakharau"&gt;Medium&lt;/a&gt;: my new social platform&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As some of you probably noticed, I published the latest part of the No-code series on Medium (please feel free to subscribe). Now it is a place where I will publish my articles. In a short time, I will migrate there my previous posts as well.&lt;/p&gt;&lt;p&gt;&lt;a href="https://izakharau.me/posts/updates-on-content-strategy/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://izakharau.me/posts/updates-on-content-strategy/</guid><pubDate>Tue, 09 May 2023 19:33:06 GMT</pubDate></item><item><title>Breaking changes &amp; Backward compatibility v2</title><link>https://izakharau.me/posts/backward-compatibility/</link><dc:creator>Ilya Zakharau</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img src="https://izakharau.me/images/breaking_changes.jpeg" alt="Breaking changes everywhere"&gt;&lt;/p&gt;
&lt;p&gt;I learned what backward compatibility means regarding software engineering when I started working on microservices. When you are responsible for services widely used by other teams inside and partners outside, you most likely become paranoid about maintaining backward compatibility of your API as much as possible. Especially when it is a  highly volatile environment with rapidly growing functionality and direction changes on the fly.&lt;/p&gt;
&lt;p&gt;At some point,  I invented the term "backward awkwardability" - an awkward feeling while telling consumers that there are breaking changes in a new release, so they have to migrate. If your team does it frequently, they will say something like, "C'mon guys, you introduced breaking changes just a few iterations before! What's going on?"&lt;/p&gt;
&lt;p&gt;Let's talk about backward compatibility and how to deal with the breaking changes in terms of API.&lt;/p&gt;&lt;p&gt;&lt;a href="https://izakharau.me/posts/backward-compatibility/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://izakharau.me/posts/backward-compatibility/</guid><pubDate>Tue, 04 Apr 2023 19:30:00 GMT</pubDate></item><item><title>Non-functional Requirements and API</title><link>https://izakharau.me/posts/non-functional-requirements-and-api/</link><dc:creator>Ilya Zakharau</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img src="https://izakharau.me/images/non-functional-api.png" alt="Slides from API Workshop about Non-functional requirements"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://izakharau.me/posts/definition-of-api-requirements-v2"&gt;Previously&lt;/a&gt; we discussed the notion of requirements for APIs. Now let's talk specifically about their quality attributes. Or how we can refer to them: non-functional requirements.&lt;/p&gt;
&lt;p&gt;When we use the term "non-functional requirements," we imply that there should be "functional requirements" as well. What is a functional requirement for an API endpoint? Return a response based on the provided input data. It sounds oversimplified, but this is how it is.&lt;/p&gt;
&lt;p&gt;In detaching API from the functionality, meaning we have a variety of APIs for different consumers, I like an association with a "door."&lt;/p&gt;&lt;p&gt;&lt;a href="https://izakharau.me/posts/non-functional-requirements-and-api/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>API Design</category><guid>https://izakharau.me/posts/non-functional-requirements-and-api/</guid><pubDate>Tue, 07 Mar 2023 20:43:06 GMT</pubDate></item><item><title>Definition of API Requirements v2</title><link>https://izakharau.me/posts/definition-of-api-requirements-v2/</link><dc:creator>Ilya Zakharau</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img src="https://izakharau.me/images/api-image.jpeg" alt="API"&gt;&lt;/p&gt;
&lt;p&gt;Requirements definition for APIs is not a standard part of the Business Analysis activities in software development. Usually, API design was a single responsibility of a system architect or a developer, considering implementation subject matter experts.&lt;/p&gt;
&lt;p&gt;During my BA career, I had to deal with API-specific requirements. I realized that the API layer has stakeholders (aka consumers) who have their needs related to APIs provided by a system-of-interest. And those needs should be analyzed and translated into requirements.&lt;/p&gt;
&lt;p&gt;The goal of this essay is to give an introduction to the definition of API requirements for my fellow Business Analysts, Product Owner, and Product Managers.&lt;/p&gt;&lt;p&gt;&lt;a href="https://izakharau.me/posts/definition-of-api-requirements-v2/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>API Design</category><guid>https://izakharau.me/posts/definition-of-api-requirements-v2/</guid><pubDate>Tue, 14 Feb 2023 21:07:00 GMT</pubDate></item><item><title>API Design Tooling</title><link>https://izakharau.me/posts/api-design-tooling/</link><dc:creator>Ilya Zakharau</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img src="https://izakharau.me/images/api-design-tooling/back.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;This article is a part of the &lt;a href="https://izakharau.me/pages/api-design"&gt;API Design&lt;/a&gt; series, where I will review several API design tools and summarize my experiences. There are the following criteria I use in selecting and evaluating the tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it is free: either open source or a free plan of a paid product&lt;/li&gt;
&lt;li&gt;out-of-the-box functionality is considered only: no plugins&lt;/li&gt;
&lt;li&gt;both web and desktop products are considered&lt;/li&gt;
&lt;li&gt;it allows designing REST API definition in OpenAPI 3.x with JSON/YAML (low-code), UI means (no-code), or a combination of both&lt;/li&gt;
&lt;li&gt;code generation functionality is not required as there are several 3rd party libraries to do that&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am not promoting, just expressing my honest opinion.&lt;/p&gt;&lt;p&gt;&lt;a href="https://izakharau.me/posts/api-design-tooling/"&gt;Read more…&lt;/a&gt; (10 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>API Design</category><guid>https://izakharau.me/posts/api-design-tooling/</guid><pubDate>Tue, 27 Dec 2022 22:15:30 GMT</pubDate></item><item><title>API Design-First</title><link>https://izakharau.me/posts/api-design-first/</link><dc:creator>Ilya Zakharau</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img src="https://izakharau.me/images/api-design-first-back.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;This article is a part of the &lt;a href="https://izakharau.me/pages/api-design"&gt;API Design&lt;/a&gt; series, where I will uncover API design concepts for my non-technical peers. You don't need to be a developer or an architect to participate to design or even build an API, but there is something you should learn to succeed.&lt;/p&gt;
&lt;p&gt;So we start with API design-first, which takes the opportunity to democratize the API development process.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://izakharau.me/posts/api-design-first/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>API Design</category><guid>https://izakharau.me/posts/api-design-first/</guid><pubDate>Mon, 26 Dec 2022 22:35:30 GMT</pubDate></item><item><title>Thoughts about J. Gharajedaghi’s “System Thinking”</title><link>https://izakharau.me/posts/reading-gharajedaghi-system-thinking/</link><dc:creator>Ilya Zakharau</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img src="https://izakharau.me/images/gharajedaghi.jpg" width="50%" height="50%" alt="Book Cover" style="display: block; margin:auto"&gt;&lt;br&gt;
This is a new rubric in my blog as I tried to avoid any posts about specific books before. I am taking some notes about the best books I have read. But those are not for the public eye. So this piece was not originally planned to be published. I just feel a need to share something with the world after I read a book in the title. Because that was a wonderful but pretty tough experience.&lt;/p&gt;
&lt;p&gt;Before we begin, let’s make clear that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is not a review. I will not write about bad books in my blog. By default, any book which has a separate essay is worth reading. Period.&lt;/li&gt;
&lt;li&gt;That will be in the form of an internal dialog.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;OK. What is the full title of this book?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;“System Thinking: Managing Chaos and Complexity: A Platform for Designing Business Architecture” by Jamshid Gharajedaghi, 3rd edition&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nice. How did you learn about this book?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A few years ago when I was listening to a &lt;a href="https://zamesin.ru/ru-podcast-bayram-annakov"&gt;podcast&lt;/a&gt; with a guest talking about System Thinking.&lt;/p&gt;&lt;p&gt;&lt;a href="https://izakharau.me/posts/reading-gharajedaghi-system-thinking/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Books</category><guid>https://izakharau.me/posts/reading-gharajedaghi-system-thinking/</guid><pubDate>Sat, 15 Oct 2022 12:45:39 GMT</pubDate></item><item><title>How I overcame my obsession with performance metrics and became a real PO</title><link>https://izakharau.me/posts/performance-metrics-obsession/</link><dc:creator>Ilya Zakharau</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img src="https://izakharau.me/images/Meditation-Man-Working.jpg" width="90%" alt="Overcoming the obsession" style="vertical-align:middle;margin:1% 1%"&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I fell into a common trap of every manager: obsession with performance metrics. Since I have been promoted to the PO role my responsibilities include tracking stats related to the backlog and team performance. That includes the team’s capacity, estimates, velocity, and other specific metrics. In an ideal world, the estimation of planned features matches capacity, the team performs a predicted velocity and (more importantly) delivers features in time. But we all know that doesn’t work this way.&lt;/p&gt;
&lt;p&gt;This is the story of how I became obsessed with numbers instead of being obsessed with a product. And how I overcame that and shifted my focus to real value.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://izakharau.me/posts/performance-metrics-obsession/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://izakharau.me/posts/performance-metrics-obsession/</guid><pubDate>Sun, 31 Jul 2022 09:48:26 GMT</pubDate></item><item><title>Sidekick product</title><link>https://izakharau.me/posts/sidekick-product/</link><dc:creator>Ilya Zakharau</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img src="https://izakharau.me/images/sidekick.jpg" width="90%" alt="Sidekick with Parent" style="vertical-align:middle;margin:1% 1%"&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Throughout my career, I participated in the development of a few supplements for so-called “parent” products. They were standalone services with their own, not big, but still considerable business value. Recently I realized that even though those supplement products were developed in different organizations and in different business areas they did have common traits. Moreover, they shared the same problems.&lt;/p&gt;
&lt;p&gt;It was something laying on the surface. Sometimes you shoot yourself in the foot twice before starting to see obvious things. What is the nature of those Sidekick products and do they inherit the problems of “bigger brothers”? Let us sort it out in this essay.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://izakharau.me/posts/sidekick-product/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://izakharau.me/posts/sidekick-product/</guid><pubDate>Thu, 16 Jun 2022 19:26:14 GMT</pubDate></item><item><title>Product Manager: Year One</title><link>https://izakharau.me/posts/product-manager-year-one/</link><dc:creator>Ilya Zakharau</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img src="https://izakharau.me/images/pm_year_one.jpg" width="90%" alt="Baby PM" style="vertical-align:middle;margin:1% 1%"&gt;&lt;br&gt;
One year already passed since I have been promoted to a Product Manager position: first 6 months as an Associate (a Junior grade) and then I stepped in as a fully-fledged Product Manager. And that was a drastic shift that made me revisit some aspects of my work and added a new dimension to my view on product development.&lt;/p&gt;
&lt;p&gt;In this essay, I want to summarize my experience with the insights I collected throughout the year. Some of them might be obvious to a more experienced audience. But for me, some of them were kind of revelations, and some of them were hugely underestimated initially. Anyway, it is a good exercise to conduct such a personal retrospective, and the others, I think, can benefit from that as well.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://izakharau.me/posts/product-manager-year-one/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://izakharau.me/posts/product-manager-year-one/</guid><pubDate>Tue, 10 May 2022 07:30:00 GMT</pubDate></item></channel></rss>